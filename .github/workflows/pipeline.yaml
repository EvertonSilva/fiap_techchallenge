name: CI/CD - AWS EKS
on:
  push:
    branches:
      - main
jobs:
  deploy-aws:
    env:
      REPOSITORY: ${{ vars.ECR_REPOSITORY }}
      REGISTRY_ALIAS: ${{ vars.ECR_REGISTRY_ALIAS }}
      # Poder√≠amos utilizar "${{ github.sha }}" para identificar/diferenciar as vers√µes de entrega para a produ√ß√£o, 
      # por√©m, optamos por atualizar a vers√£o latest para economizar espa√ßo no AWS ECR Public.
      IMAGE_TAG: latest
    name: Deploy AWS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub Actions
        uses: actions/checkout@v4.1.1
 
      - name: Configura credenciais AWS
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Realiza login no AWS ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2.0.1
        with:
          registry-type: public
      
      - name: Constr√≥i, define tag e publica imagem docker no AWS ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
        # $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY == URI do reposit√≥rio no ECR Public (Console).
        run: |
          echo "AWS ECR Public atualizado! üê≥"
      
      - name: Atualiza configura√ß√£o do kube no AWS EKS
        run: aws eks update-kubeconfig --name ${{ vars.EKS_CLUSTER_NAME }} --region us-east-1

      - name: Atualiza recursos do AWS EKS
        env: 
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
        run: |
          kubectl apply -f k8s/database_conf.yaml
          kubectl apply -f k8s/database.yaml
          echo "AWS EKS atualizado! üö¢"
