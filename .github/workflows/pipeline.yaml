name: CI/CD - AWS EKS
on:
  push:
    branches:
      # FIXME: @TallesCosta substituir por: main
      - feat/cria-pipeline
jobs:
  deploy-aws:
    name: Deploy AWS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub Actions
        uses: actions/checkout@v4.1.1
 
      - name: Configura credenciais AWS
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Realiza login no AWS ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2.0.1
        with:
          registry-type: public
      
      - name: Constrói, define tag e publica imagem docker no AWS ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          REGISTRY_ALIAS: ${{ vars.ECR_REGISTRY_ALIAS }}
          # Poderíamos utilizar "${{ github.sha }}" para identificar/diferenciar as versões de entrega para a produção, 
          # porém, optamos por atualizar a versão latest para economizar espaço no AWS ECR Public.
          IMAGE_TAG: latest
        # $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY == URI do repositório no ECR Public (Console).
        run: |
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
